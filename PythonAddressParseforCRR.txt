from ayx import Alteryx
import re

def parse_postal_addresses(xml_string):
    """
    Given a large string (xml_string), find the first occurrence of 'address1' and 'countryName'
    after 'Company Registered Address'. Return '<address1>, <countryName>' or None if not found.
    """
    if not xml_string:
        return None
    
    # Regex to anchor on 'Company Registered Address', then find address1 and countryName
    pattern = r"'Company Registered Address'.*?'address1'\s*:\s*'([^']+)'.*?'countryName'\s*:\s*'([^']+)'"
    match = re.search(pattern, xml_string, re.DOTALL)
    if match:
        # Group 1 = address1, Group 2 = countryName
        return f"{match.group(1)}, {match.group(2)}"
    return None

# -------------------------------------------
# Process Input #1 (top input anchor)
# -------------------------------------------
for row in Alteryx.read("#1"):
    # row is a dict of all fields in the record, e.g. row["postalAddresses"], row["SomeOtherField"], etc.
    xml_string = row.get("postalAddresses", "")
    
    # Parse out the needed part
    registered_address = parse_postal_addresses(xml_string)
    
    # Store the result in a new field
    row["Registered Address"] = registered_address if registered_address else ""
    
    # Write out this modified row to output #1
    Alteryx.write(row, 1)

# -------------------------------------------
# Process Input #2 (bottom input anchor)
# -------------------------------------------
for row in Alteryx.read("#2"):
    xml_string = row.get("postalAddresses", "")
    
    registered_address = parse_postal_addresses(xml_string)
    row["Registered Address"] = registered_address if registered_address else ""
    
    # Write out this modified row to output #2
    Alteryx.write(row, 2)
