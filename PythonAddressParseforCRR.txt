from ayx import Alteryx, Package
import pandas as pd
import re

def parse_postal_addresses(xml_string):
    """
    Given a string (xml_string), find the first occurrence of 'address1' and 'countryName'
    AFTER 'Company Registered Address'. Return '<address1>, <countryName>' or None if not found.
    """
    if not xml_string or not isinstance(xml_string, str):
        return None
    
    # Regex anchored on 'Company Registered Address'
    # Looks for the first 'address1': '...' and 'countryName': '...' afterwards
    pattern = r"'Company Registered Address'.*?'address1'\s*:\s*'([^']+)'.*?'countryName'\s*:\s*'([^']+)'"
    match = re.search(pattern, xml_string, re.DOTALL)
    
    if match:
        address1 = match.group(1)
        country  = match.group(2)
        return f"{address1}, {country}"
    return None

# ---------------------------------------------------------
# 1) Read incoming data #1 as a DataFrame
# ---------------------------------------------------------
df1 = Alteryx.read("#1")  # This should be a pandas DataFrame (if configured)

# Parse 'postalAddresses' column to create a new 'Registered Address' column
if "postalAddresses" in df1.columns:
    df1["Registered Address"] = df1["postalAddresses"].apply(parse_postal_addresses)
else:
    # If the column doesn't exist, create an empty one
    df1["Registered Address"] = None

# Write updated df1 to output anchor #1
Alteryx.write(df1, 1)

# ---------------------------------------------------------
# 2) Read incoming data #2 as a DataFrame
# ---------------------------------------------------------
df2 = Alteryx.read("#2")  # This should be a pandas DataFrame (if configured)

# Parse 'postalAddresses' column
if "postalAddresses" in df2.columns:
    df2["Registered Address"] = df2["postalAddresses"].apply(parse_postal_addresses)
else:
    df2["Registered Address"] = None

# Write updated df2 to output anchor #2
Alteryx.write(df2, 2)








from ayx import Alteryx, Package
import pandas as pd
import re

def parse_postal_addresses(xml_string):
    """
    Given a large string (xml_string), find the first occurrence of
    address1, cityName, and countryName after Company Registered Address.
    Return "<address1>, <cityName>, <countryName>" or None if not found.
    """
    if not xml_string or not isinstance(xml_string, str):
        return None

    pattern = r"'Company Registered Address'.*?'address1'\s*:\s*'([^']+)'.*?'cityName'\s*:\s*'([^']+)'.*?'countryName'\s*:\s*'([^']+)'"
    match = re.search(pattern, xml_string, re.DOTALL)

    if match:
        address1 = match.group(1)
        cityName = match.group(2)
        country  = match.group(3)
        return f"{address1}, {cityName}, {country}"
    return None

# ---------------------------------------------------------
# Read incoming data #1 as a DataFrame
# ---------------------------------------------------------
df1 = Alteryx.read("#1")  # must be configured as DataFrame input
if "postalAddresses" in df1.columns:
    df1["Registered Address"] = df1["postalAddresses"].apply(parse_postal_addresses)
else:
    df1["Registered Address"] = None

Alteryx.write(df1, 1)

# ---------------------------------------------------------
# Read incoming data #2 as a DataFrame
# ---------------------------------------------------------
df2 = Alteryx.read("#2")  # must be configured as DataFrame input
if "postalAddresses" in df2.columns:
    df2["Registered Address"] = df2["postalAddresses"].apply(parse_postal_addresses)
else:
    df2["Registered Address"] = None

Alteryx.write(df2, 2)


from ayx import Alteryx, Package
import pandas as pd
import re

def parse_postal_addresses(xml_string):
    """
    Given a large string (xml_string), find the FIRST occurrence of:
      code:'REG', then 'address1', 'postalCode', 'cityName', 'countryName'.
    Returns "<address1>, <postalCode>, <cityName>, <countryName>" or None if not found.
    """
    if not xml_string or not isinstance(xml_string, str):
        return None

    pattern = (
        r"'code'\s*:\s*'REG'"
        r".*?'address1'\s*:\s*'([^']+)'"
        r".*?'postalCode'\s*:\s*'([^']+)'"
        r".*?'cityName'\s*:\s*'([^']+)'"
        r".*?'countryName'\s*:\s*'([^']+)'"
    )
    match = re.search(pattern, xml_string, re.DOTALL)
    if match:
        address1    = match.group(1)
        postal_code = match.group(2)
        city_name   = match.group(3)
        country     = match.group(4)
        return f"{address1}, {postal_code}, {city_name}, {country}"
    return None

# ----------------------------------------------------------------
# Read from input #1 as a DataFrame
# ----------------------------------------------------------------
df1 = Alteryx.read("#1")  # Ensure Input anchor #1 is set to DataFrame
if "postalAddresses" in df1.columns:
    df1["Registered Address"] = df1["postalAddresses"].apply(parse_postal_addresses)
else:
    df1["Registered Address"] = None

Alteryx.write(df1, 1)

# ----------------------------------------------------------------
# Read from input #2 as a DataFrame
# ----------------------------------------------------------------
df2 = Alteryx.read("#2")  # Ensure Input anchor #2 is set to DataFrame
if "postalAddresses" in df2.columns:
    df2["Registered Address"] = df2["postalAddresses"].apply(parse_postal_addresses)
else:
    df2["Registered Address"] = None

Alteryx.write(df2, 2)
